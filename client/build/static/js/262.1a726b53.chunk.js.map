{"version":3,"file":"static/js/262.1a726b53.chunk.js","mappings":"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","sources":["constants/suggestions.js","services/suggestionService.js","pages/Suggestions/Review/index.js","utils/suggestionUtils.js"],"sourcesContent":["// 审核状态\nexport const REVIEW_STATUS = {\n  PENDING_FIRST_REVIEW: '等待一级审核',\n  PENDING_SECOND_REVIEW: '等待二级审核',\n  APPROVED: '已批准',\n  REJECTED: '已驳回',\n};\n\n// 审核状态颜色映射\nexport const REVIEW_STATUS_COLORS = {\n  PENDING_FIRST_REVIEW: 'gold',     // 金色 - 等待一级审核\n  PENDING_SECOND_REVIEW: 'orange',  // 橙色 - 等待二级审核\n  APPROVED: 'green',               // 绿色 - 已批准\n  REJECTED: 'red',                 // 红色 - 已驳回\n};\n\n// 审核状态流转规则\nexport const REVIEW_STATUS_TRANSITIONS = {\n  PENDING_FIRST_REVIEW: ['APPROVED', 'REJECTED'],\n  PENDING_SECOND_REVIEW: ['APPROVED', 'REJECTED'],\n  APPROVED: [],\n  REJECTED: ['PENDING_FIRST_REVIEW'],\n};\n\n// 实施状态\nexport const IMPLEMENTATION_STATUS = {\n  NOT_STARTED: '未开始',\n  CONTACTING: '联系中',\n  IN_PROGRESS: '实施中',\n  DELAYED: '延期',\n  COMPLETED: '已完成',\n  CANCELLED: '已取消'\n};\n\n// 实施状态流转规则\nexport const IMPLEMENTATION_STATUS_TRANSITIONS = {\n  NOT_STARTED: ['CONTACTING', 'CANCELLED'],\n  CONTACTING: ['IN_PROGRESS', 'CANCELLED'],\n  IN_PROGRESS: ['COMPLETED', 'DELAYED', 'CANCELLED'],\n  DELAYED: ['IN_PROGRESS', 'COMPLETED', 'CANCELLED'],\n  COMPLETED: [],\n  CANCELLED: ['CONTACTING']\n};\n\n// 实施状态颜色\nexport const IMPLEMENTATION_STATUS_COLORS = {\n  NOT_STARTED: 'gold',   //金色\n  CONTACTING: 'processing', // 蓝色\n  IN_PROGRESS: 'warning',   // 黄色\n  DELAYED: 'orange',        // 橙色\n  COMPLETED: 'success',     // 绿色\n  CANCELLED: 'red'         // 红色\n};\n\n// 保留原有的状态定义以确保兼容性\nexport const SUGGESTION_STATUS = {\n  PENDING_FIRST_REVIEW: '等待一级审核',\n  PENDING_SECOND_REVIEW: '等待二级审核',\n  APPROVED: '已批准',\n  REJECTED: '已驳回',\n  NOT_STARTED: '未开始',\n  NOT_IMPLEMENTED: '已批准待实施',\n  IMPLEMENTING: '实施中',\n  DELAYED: '实施延期',\n  COMPLETED: '已完成',\n  CANCELLED: '已取消',\n};\n\n// 建议类型\nexport const SUGGESTION_TYPES = {\n  SAFETY: '调度安全类',\n  ELECTRICAL: '设备电气类',\n  MECHANICAL: '设备机械类',\n  KEXIN_AUTOMATION: '科信自动化类',\n  KEXIN_MONITORING: '科信监控类',\n  OTHER: '其它类'\n};\n\n// 审核级别\nexport const REVIEW_LEVELS = {\n  FIRST_LEVEL: '一级审核',\n  SECOND_LEVEL: '二级审核'\n};\n\n// 审核结果\nexport const REVIEW_RESULTS = {\n  PENDING: '待审核',\n  APPROVED: '通过',\n  REJECTED: '拒绝'\n};\n\n// 建议状态颜色映射 (保留以兼容现有代码)\nexport const STATUS_COLORS = {\n  PENDING_FIRST_REVIEW: 'gold',        // 金色 - 等待一级审核\n  PENDING_SECOND_REVIEW: 'orange',     // 橙色 - 等待二级审核\n  APPROVED: 'green',                   // 绿色 - 已批准\n  REJECTED: 'red',                     // 红色 - 已驳回\n  NOT_STARTED: 'default',              // 默认灰色 - 未开始\n  NOT_IMPLEMENTED: 'cyan',             // 青色 - a已批准待实施\n  IMPLEMENTING: 'blue',                // 蓝色 - 实施中\n  DELAYED: 'purple',                   // 紫色 - 实施延期\n  COMPLETED: 'green',                  // 绿色 - 已完成\n  CANCELLED: 'magenta',                // 洋红色 - 已取消\n};\n\n// 建议类型颜色映射\nexport const TYPE_COLORS = {\n  SAFETY: 'volcano',                   // 火山色 - 调度安全类\n  ELECTRICAL: 'geekblue',              // 极客蓝 - 设备电气类\n  MECHANICAL: 'orange',                // 活力橙 - 设备机械类\n  KEXIN_AUTOMATION: 'cyan',            // 科技青 - 科信自动化类\n  KEXIN_MONITORING: 'red',             // 警戒红 - 科信监控类\n  OTHER: 'purple'                      // 紫色 - 其它类\n}; \n","import api from './api';\nimport axios from 'axios';\n\n// 移除开头的 /api，假设 api 实例已配置 baseURL: '/api'\nconst API_URL = '/suggestions';\n\nexport const suggestionService = {\n  // 获取创建建议初始数据\n  getCreateData: async () => {\n    try {\n      const response = await api.get('/suggestions/create');\n      return response;\n    } catch (error) {\n      console.error('获取创建建议数据失败:', error);\n      throw error;\n    }\n  },\n\n  // 提交建议\n  submitSuggestion: async (formData) => {\n    try {\n      console.log('提交建议，表单数据:', formData);\n      \n      // 确保Content-Type由浏览器自动设置\n      const response = await api.post('/suggestions', formData, {\n        headers: {\n          // 不要显式设置Content-Type，让浏览器自动设置，确保边界字符串正确\n          'Content-Type': undefined\n        }\n      });\n      \n      console.log('提交建议响应:', response);\n      return response;\n    } catch (error) {\n      console.error('提交建议失败:', error);\n      console.error('错误响应:', error.response?.data);\n      throw error;\n    }\n  },\n\n  // 获取建议列表\n  getSuggestions: async (params = {}) => {\n    try {\n      console.log('suggestionService.getSuggestions - params:', params);\n      // 将 params 对象转换为查询字符串\n      const queryString = new URLSearchParams(params).toString();\n      console.log('suggestionService.getSuggestions - queryString:', queryString);\n      // 将查询字符串附加到 URL，并使用 api 对象\n      const response = await api.get(`/suggestions?${queryString}`); \n      \n      console.log('suggestionService.getSuggestions - 原始响应:', response);\n      \n      // 分析响应结构并适配成统一的格式：{ data: [...], pagination: {...} }\n      let result = {\n        data: [],\n        pagination: {\n          current: parseInt(params.page) || 1,\n          pageSize: parseInt(params.limit) || 10,\n          total: 0\n        }\n      };\n      \n      // 1. 检查后端直接返回的 suggestions 和 pagination 格式\n      if (response && response.data && Array.isArray(response.data.suggestions)) {\n        console.log('格式1: response.data = { suggestions: [...], pagination: {...} }');\n        result.data = response.data.suggestions;\n        if (response.data.pagination) {\n          result.pagination = {\n            current: parseInt(response.data.pagination.current) || result.pagination.current,\n            pageSize: parseInt(response.data.pagination.pageSize) || result.pagination.pageSize,\n            total: parseInt(response.data.pagination.total) || result.pagination.total\n          };\n        }\n      } \n      // 2. 检查直接返回数组的格式\n      else if (response && Array.isArray(response.data)) {\n        console.log('格式2: response.data = [...]');\n        result.data = response.data;\n        result.pagination.total = response.data.length; // 直接返回数组时，总数就是数组长度\n      }\n      // 3. 检查嵌套数据的格式\n      else if (response && response.data && response.data.data && Array.isArray(response.data.data)) {\n        console.log('格式3: response.data.data = [...]');\n        result.data = response.data.data;\n        if (response.data.pagination) {\n          result.pagination = {\n            current: parseInt(response.data.pagination.current) || result.pagination.current,\n            pageSize: parseInt(response.data.pagination.pageSize) || result.pagination.pageSize,\n            total: parseInt(response.data.pagination.total) || result.pagination.total\n          };\n        } else {\n          result.pagination.total = response.data.data.length; // 没有分页信息时，总数为数组长度\n        }\n      } \n      // 4. 处理其他可能的格式\n      else {\n        console.warn('suggestionService.getSuggestions - 未知响应结构:', response);\n        // 尝试从响应中提取有用信息\n        if (response && typeof response === 'object') {\n          // 尝试找到第一个数组类型的属性作为数据\n          const arrayProp = Object.entries(response).find(([_, value]) => Array.isArray(value));\n          if (arrayProp) {\n            console.log(`找到可能的数据数组: ${arrayProp[0]}`);\n            result.data = arrayProp[1];\n            result.pagination.total = arrayProp[1].length;\n          }\n          \n          // 尝试找到分页信息\n          const paginationProp = Object.entries(response).find(([key, value]) => \n            typeof value === 'object' && \n            value !== null && \n            (key === 'pagination' || key === 'page' || key === 'paging')\n          );\n          \n          if (paginationProp) {\n            console.log(`找到可能的分页信息: ${paginationProp[0]}`);\n            const paginationData = paginationProp[1];\n            result.pagination = {\n              current: parseInt(paginationData.current || paginationData.page || paginationData.currentPage || 1),\n              pageSize: parseInt(paginationData.pageSize || paginationData.limit || paginationData.size || 10),\n              total: parseInt(paginationData.total || paginationData.totalCount || paginationData.totalItems || 0)\n            };\n          }\n        }\n      }\n      \n      console.log('suggestionService.getSuggestions - 处理后的结果:', result);\n      return result;\n    } catch (error) {\n      console.error('获取建议列表失败:', error.response?.data || error.message);\n      throw error;\n    }\n  },\n\n  // 获取单个建议详情\n  getSuggestionById: async (id) => {\n    try {\n      const response = await api.get(`/suggestions/${id}`);\n      // 验证并修复可能的空数据\n      if (response && response.data) {\n        return {\n          data: validateSuggestionData(response.data)\n        };\n      } else if (response) {\n        return {\n          data: validateSuggestionData(response)\n        };\n      }\n      return response;\n    } catch (error) {\n      console.error('获取建议详情失败:', error);\n      throw error;\n    }\n  },\n\n  // 更新建议状态\n  updateSuggestionStatus: async (id, status, comment) => {\n    try {\n      const response = await api.put(`/suggestions/${id}/status`, {\n        status,\n        comment\n      });\n      return response;\n    } catch (error) {\n      console.error('更新建议状态失败:', error);\n      throw error;\n    }\n  },\n\n  // 一级审核\n  firstReview: async (id, approved, comments) => {\n    try {\n      console.log('提交一级审核:', id, '审核结果:', approved, '审核意见:', comments);\n      const response = await api.put(`/suggestions/${id}/first-review`, {\n        result: approved,  // 使用 result 字段\n        comments: comments\n      });\n      console.log('一级审核响应:', response);\n      return response;\n    } catch (error) {\n      console.error('一级审核失败:', error);\n      console.error('错误详情:', error.response?.data);\n      throw error;\n    }\n  },\n\n  // 二级审核\n  secondReview: async (id, approved, comments) => {\n    try {\n      console.log('提交二级审核:', id, '审核结果:', approved, '审核意见:', comments);\n      const response = await api.put(`/suggestions/${id}/second-review`, {\n        result: approved,  // 使用 result 字段\n        comments: comments\n      });\n      console.log('二级审核响应:', response);\n      return response;\n    } catch (error) {\n      console.error('二级审核失败:', error);\n      console.error('错误详情:', error.response?.data);\n      throw error;\n    }\n  },\n\n  // 更新建议\n  updateSuggestion: async (id, updateData) => {\n    try {\n      console.log('更新建议:', id, updateData);\n      const response = await api.put(`/suggestions/${id}`, updateData);\n      return response;\n    } catch (error) {\n      console.error('更新建议失败:', error);\n      throw error;\n    }\n  },\n\n  // 撤回功能已删除\n\n  // 添加评论\n  addComment: async (id, comment) => {\n    try {\n      const response = await api.post(`/suggestions/${id}/comments`, {\n        content: comment\n      });\n      return response;\n    } catch (error) {\n      console.error('添加评论失败:', error);\n      throw error;\n    }\n  },\n\n  // 获取所有建议\n  getAllSuggestions: async () => {\n    try {\n      const response = await axios.get(API_URL);\n      return response.data;\n    } catch (error) {\n      console.error('获取建议列表失败:', error);\n      throw error;\n    }\n  },\n\n  // 获取单个建议\n  getSuggestion: async (id) => {\n    try {\n      const response = await axios.get(`${API_URL}/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('获取建议详情失败:', error);\n      throw error;\n    }\n  },\n\n  // 创建新建议\n  createSuggestion: async (suggestionData) => {\n    try {\n      const response = await axios.post(API_URL, suggestionData);\n      return response.data;\n    } catch (error) {\n      console.error('创建建议失败:', error);\n      throw error;\n    }\n  },\n\n  // 删除建议\n  deleteSuggestion: async (id) => {\n    try {\n      console.log(`尝试删除建议: ${id}`);\n      const response = await api.delete(`/suggestions/${id}`);\n      console.log('删除建议响应:', response);\n      // 后端返回 { success: true, message: '...' }\n      if (response && response.success === true) {\n        return { success: true, message: response.message };\n      } else {\n        // 如果后端没有按预期返回 success: true\n        console.warn('删除成功但响应格式不符合预期:', response);\n        return { success: false, message: response?.message || '删除失败，响应格式错误' };\n      }\n    } catch (error) {\n      console.error(`删除建议 ${id} 失败:`, error);\n      console.error('错误响应:', error.response?.data);\n      return {\n        success: false,\n        message: error.response?.data?.message || '删除建议时发生网络或服务器错误'\n      };\n    }\n  },\n\n  // 提交建议审核\n  submitForReview: async (id) => {\n    try {\n      const response = await axios.post(`${API_URL}/${id}/submit`);\n      return response.data;\n    } catch (error) {\n      console.error('提交建议审核失败:', error);\n      throw error;\n    }\n  },\n\n  // 审核建议\n  reviewSuggestion: async (id, reviewData) => {\n    try {\n      const response = await axios.post(`${API_URL}/${id}/review`, reviewData);\n      return response.data;\n    } catch (error) {\n      console.error('审核建议失败:', error);\n      throw error;\n    }\n  },\n  \n  // 更新建议实施状态\n  updateImplementation: async (id, implementationData) => {\n    try {\n      // 使用新的实施状态映射\n      const statusMap = {\n        '未开始': 'NOT_STARTED',\n        '联系中': 'CONTACTING',\n        '实施中': 'IN_PROGRESS',\n        '已完成': 'COMPLETED',\n        '取消': 'CANCELLED'\n      };\n\n      // 准备发送到后端的数据\n      const updatePayload = {\n        ...implementationData,\n        status: statusMap[implementationData.status] || implementationData.status,\n      };\n      // 删除 evaluation 键，以防万一\n      delete updatePayload.evaluation;\n\n      console.log('发送实施更新请求 (suggestionService):', id, updatePayload);\n      \n      // 调用统一的更新接口 (假设是 PUT /api/suggestions/:id/implementation 或类似)\n      // 注意：后端路由和控制器需要对应这个路径和方法\n      // 查找之前的代码，发现后端控制器是 suggestionController.updateImplementation\n      // 路由是 PUT /api/suggestions/:id/implementation (需要确认或调整)\n      // 假设路由是 /api/suggestions/:id/implementation\n      const response = await api.put(`${API_URL}/${id}/implementation`, updatePayload);\n      \n      console.log('实施更新响应:', response);\n      \n      // 返回成功标识和数据\n      return {\n        success: true,\n        message: '实施状态更新成功',\n        data: response.data || response // 根据后端实际返回调整\n      };\n\n    } catch (error) {\n      console.error('更新实施状态失败 (suggestionService):', error);\n      console.error('错误响应:', error.response?.data);\n      // 返回包含错误信息的对象\n      return {\n        success: false,\n        message: error.response?.data?.message || '更新实施状态失败', // 优先使用后端错误信息\n        error: error\n      };\n    }\n  },\n  \n  // 获取实施统计数据\n  getImplementationStats: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/stats/implementation`);\n      return response.data;\n    } catch (error) {\n      console.error('获取实施统计数据失败:', error);\n      throw error;\n    }\n  },\n\n  // 提交审核\n  submitReview: async (reviewData) => {\n    try {\n      const response = await api.post('/suggestions/review', reviewData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // 部门经理为建议打分\n  scoreSuggestion: async (id, score) => {\n    try {\n      const response = await api.post(`/suggestions/${id}/score`, { score });\n      return response; // 通常返回更新后的 suggestion 对象\n    } catch (error) {\n      console.error(`建议 ${id} 打分失败:`, error);\n      throw error; // 将错误抛出给调用者处理\n    }\n  }\n};\n\n// 验证并修复建议数据，确保关键字段存在\nfunction validateSuggestionData(suggestion) {\n  if (!suggestion) return {};\n\n  // 处理实施信息，确保字段命名一致\n  let implementation = suggestion.implementation;\n  if (implementation) {\n    // 确保前端显示所需的字段存在\n    implementation = {\n      ...implementation,\n      // 确保状态字段存在，并进行状态名称标准化\n      status: implementation.status || 'NOT_STARTED',\n      // 确保责任人字段存在，优先使用responsiblePerson字段\n      responsiblePerson: implementation.responsiblePerson || \n                         implementation.implementer?.name || \n                         (typeof implementation.implementer === 'string' ? implementation.implementer : '未分配'),\n      // 确保日期字段存在\n      startDate: implementation.startDate || null,\n      plannedEndDate: implementation.plannedCompletionDate || implementation.plannedEndDate || null,\n      actualEndDate: implementation.actualCompletionDate || implementation.actualEndDate || null,\n      // 确保备注字段存在\n      notes: implementation.notes || implementation.comments || '',\n      // 确保历史记录存在\n      history: implementation.history || []\n    };\n  } else {\n    // 如果没有实施信息，创建默认的实施信息\n    implementation = {\n      status: 'NOT_STARTED',\n      responsiblePerson: '未分配',\n      startDate: null,\n      plannedEndDate: null,\n      actualEndDate: null,\n      notes: '',\n      history: []\n    };\n  }\n  \n  // 处理建议状态\n  let reviewStatus = suggestion.reviewStatus || suggestion.status;\n  let implementationStatus = suggestion.implementationStatus || \n                           (implementation ? implementation.status : 'NOT_STARTED');\n  \n  // 导入状态常量\n  const { REVIEW_STATUS, IMPLEMENTATION_STATUS } = require('../constants/suggestions');\n  \n  // 转换审核状态\n  if (REVIEW_STATUS[reviewStatus]) {\n    reviewStatus = REVIEW_STATUS[reviewStatus];\n  }\n  \n  // 转换实施状态\n  if (IMPLEMENTATION_STATUS[implementationStatus]) {\n    implementationStatus = IMPLEMENTATION_STATUS[implementationStatus];\n  }\n  \n  return {\n    ...suggestion,\n    reviewStatus,\n    implementationStatus,\n    implementation,\n    // 确保submitter字段存在\n    submitter: suggestion.submitter || { name: '未知', _id: null },\n    // 确保comments字段是数组\n    comments: Array.isArray(suggestion.comments) ? suggestion.comments.map(comment => ({\n      ...comment,\n      user: comment.user || { name: '未知用户' },\n      createdAt: comment.createdAt || new Date().toISOString()\n    })) : []\n  };\n} ","import React, { useState, useEffect, useCallback } from 'react';\nimport { \n  Card, \n  Table, \n  Tag, \n  Button, \n  Space, \n  message, \n  Typography, \n  Alert,\n  Tooltip,\n  Badge,\n  Tabs,\n  Modal,\n  Form,\n  Input,\n  Radio,\n  Row,\n  Col\n} from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  CheckCircleOutlined, \n  CloseCircleOutlined, \n  FileTextOutlined,\n  QuestionCircleOutlined\n} from '@ant-design/icons';\nimport { suggestionService } from '../../../services/suggestionService';\nimport { authService } from '../../../services/authService';\nimport { SUGGESTION_STATUS, SUGGESTION_TYPES, STATUS_COLORS, TYPE_COLORS } from '../../../constants/suggestions';\nimport { getCurrentStatus } from '../../../utils/suggestionUtils';\n\nconst { Title, Text, TextArea } = Typography;\nconst { TabPane } = Tabs;\n\n// 获取当前用户信息\nconst ReviewList = () => {\n  const navigate = useNavigate();\n  const [pendingReviews, setPendingReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [activeTab, setActiveTab] = useState('');\n  const [reviewModalVisible, setReviewModalVisible] = useState(false);\n  const [currentSuggestion, setCurrentSuggestion] = useState(null);\n  const [reviewForm] = Form.useForm();\n  const [reviewType, setReviewType] = useState('');\n  const [sortInfo, setSortInfo] = useState({ field: null, order: null });\n  // 添加移动设备检测状态\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n\n  // 监听窗口大小变化\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n    \n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // 根据用户角色确定可以查看的审核类型\n  const isSupervisor = currentUser?.role === '值班主任';\n  const isSafetyAdmin = currentUser?.role === '安全科管理人员';\n  const isOperationAdmin = currentUser?.role === '运行科管理人员';\n  const isDepartmentManager = currentUser?.role === '部门经理';\n  \n  const canAccessFirstTab = isSupervisor || isDepartmentManager;\n  const canAccessSecondTab = isSafetyAdmin || isOperationAdmin || isDepartmentManager;\n\n  // 获取当前用户信息\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      try {\n        const user = await authService.getCurrentUser();\n        if (!user) {\n          message.error('请先登录');\n          navigate('/login');\n          return;\n        }\n        setCurrentUser(user);\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n        message.error('获取用户信息失败');\n        navigate('/login');\n      }\n    };\n    \n    fetchCurrentUser();\n  }, [navigate]);\n\n  // 设置默认激活的 Tab\n  useEffect(() => {\n    if (currentUser) {\n      if (canAccessFirstTab) {\n        setActiveTab('first');\n      } else if (canAccessSecondTab) {\n        setActiveTab('second');\n      }\n    }\n  }, [currentUser, canAccessFirstTab, canAccessSecondTab]);\n\n  // 获取待审核建议 (添加排序参数)\n  const fetchPendingReviews = useCallback(async () => {\n    try {\n      setLoading(true);\n      // 准备排序参数\n      const params = {};\n      if (sortInfo.field && sortInfo.order) {\n        params.sortBy = sortInfo.field;\n        // Ant Design's 'ascend'/'descend' to 'asc'/'desc'\n        params.sortOrder = sortInfo.order === 'ascend' ? 'asc' : 'desc';\n      }\n      console.log('Fetching suggestions with params:', params);\n      // 将排序参数传递给 service\n      const response = await suggestionService.getSuggestions(params);\n\n      console.log('获取到的建议列表 (ReviewList):', response);\n      \n      let suggestionsToShow = [];\n      if (response && response.data && Array.isArray(response.data)) {\n        suggestionsToShow = response.data;\n      } else if (response && Array.isArray(response)) {\n        suggestionsToShow = response; // 兼容直接返回数组\n      }\n\n      console.log('设置待审核列表 (ReviewList):', suggestionsToShow);\n      setPendingReviews(suggestionsToShow);\n    } catch (error) {\n      console.error('获取待审核建议失败:', error);\n      message.error('获取待审核建议失败');\n      setPendingReviews([]); // 出错时清空\n    } finally {\n      setLoading(false);\n    }\n  }, [currentUser, navigate, sortInfo.field, sortInfo.order]);\n\n  useEffect(() => {\n    if (currentUser) {\n      fetchPendingReviews();\n    }\n  }, [currentUser, fetchPendingReviews]);\n\n  // 点击查看详情\n  const handleViewDetail = (id) => {\n    navigate(`/suggestions/${id}`);\n  };\n\n  // 处理审核操作\n  const handleReview = (record, type) => {\n    setCurrentSuggestion(record);\n    setReviewType(type);\n    setReviewModalVisible(true);\n  };\n\n  // 处理审核提交\n  const handleSubmitReview = async (values) => {\n    try {\n      const { result, comment } = values;\n      const reviewData = {\n        suggestionId: currentSuggestion._id,\n        reviewType: reviewType,\n        comment,\n        result,\n        reviewerId: currentUser._id\n      };\n\n      console.log('提交审核数据:', JSON.stringify(reviewData, null, 2));\n      console.log('当前建议状态:', currentSuggestion.status);\n      console.log('当前用户角色:', currentUser?.role);\n      console.log('当前用户班组:', currentUser?.team);\n      console.log('建议所属班组:', currentSuggestion.team);\n      console.log('建议类型:', currentSuggestion.type);\n      \n      await suggestionService.submitReview(reviewData);\n      message.success('审核提交成功');\n      setReviewModalVisible(false);\n      reviewForm.resetFields();\n      \n      // 立即刷新列表\n      fetchPendingReviews();\n      \n      // 2秒后再次刷新，确保状态更新完全同步\n      setTimeout(() => {\n        fetchPendingReviews();\n      }, 2000);\n    } catch (error) {\n      console.error('审核提交失败:', error);\n      message.error('审核提交失败' + (error.response?.data?.message || ''));\n    }\n  };\n\n  // 表格列定义 - 桌面版\n  const desktopColumns = [\n    {\n      title: '标题',\n      dataIndex: 'title',\n      key: 'title',\n      sorter: true,\n      render: (text, record) => (\n        <Button\n          type=\"link\"\n          onClick={() => handleViewDetail(record._id)}\n          style={{\n            fontSize: '14px',\n            padding: '0',\n            textAlign: 'left',\n            height: 'auto',\n            lineHeight: 'normal'\n          }}\n        >\n          <span style={{ whiteSpace: 'normal', wordBreak: 'break-word' }}>\n            {text}\n          </span>\n        </Button>\n      )\n    },\n    {\n      title: '类型',\n      dataIndex: 'type',\n      key: 'type',\n      sorter: true,\n      render: (type) => (\n        <Tag \n          color={TYPE_COLORS[type] || 'default'}\n          style={{ \n            padding: '4px 8px', \n            borderRadius: '4px', \n            fontSize: '14px'\n          }}\n        >\n          {SUGGESTION_TYPES[type] || type}\n        </Tag>\n      )\n    },\n    {\n      title: '状态',\n      dataIndex: 'status',\n      key: 'status',\n      sorter: true,\n      render: (status, record) => {\n        const currentStatus = getCurrentStatus(record);\n        // 确保显示正确的颜色，即使状态是中文\n        const displayColor = STATUS_COLORS[currentStatus] || 'default';\n        \n        return (\n          <Tag \n            color={displayColor}\n            style={{ \n              padding: '4px 8px', \n              borderRadius: '4px', \n              fontSize: '14px'\n            }}\n          >\n            {SUGGESTION_STATUS[currentStatus] || currentStatus}\n          </Tag>\n        );\n      }\n    },\n    {\n      title: '得分',\n      dataIndex: ['scoring', 'score'],\n      key: 'score',\n      sorter: (a, b) => {\n        // 确保正确排序，处理空值情况\n        const scoreA = a.scoring?.score;\n        const scoreB = b.scoring?.score;\n        \n        // 当两个值都存在时进行数值比较\n        if (scoreA !== undefined && scoreA !== null && \n            scoreB !== undefined && scoreB !== null) {\n          return scoreA - scoreB;\n        }\n        \n        // 处理空值情况 (将空值排在最后)\n        if (scoreA === undefined || scoreA === null) return 1;\n        if (scoreB === undefined || scoreB === null) return -1;\n        return 0;\n      },\n      render: (score) => (\n        <span style={{ fontSize: '14px' }}>\n          {typeof score === 'number' ? score.toFixed(1) : '-'}\n        </span>\n      )\n    },\n    {\n      title: '提交人',\n      dataIndex: 'submitter',\n      key: 'submitter',\n      sorter: true,\n      render: (submitter) => <span style={{ fontSize: '14px' }}>{submitter?.name || '未知'}</span>\n    },\n    {\n      title: '班组',\n      dataIndex: 'team',\n      key: 'team',\n      sorter: true,\n      render: (team) => <span style={{ fontSize: '14px' }}>{team}</span>\n    },\n    {\n      title: '提交时间',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n      sorter: true,\n      render: (text) => <span style={{ fontSize: '14px' }}>{text ? new Date(text).toLocaleString() : '未知'}</span>\n    },\n    {\n      title: '操作',\n      key: 'action',\n      render: (_, record) => {\n        const currentStatus = getCurrentStatus(record);\n        // 一级审核按钮\n        const firstReviewButton = (\n          currentStatus === 'PENDING_FIRST_REVIEW' && \n          (isSupervisor || isDepartmentManager)\n        ) && (\n          <Button \n            type=\"primary\" \n            onClick={() => handleReview(record, 'first')}\n            style={{ fontSize: '14px' }}\n          >\n            一级审核\n          </Button>\n        );\n\n        // 二级审核按钮\n        const secondReviewButton = (\n          currentStatus === 'PENDING_SECOND_REVIEW' && \n          (\n            (isSafetyAdmin && (record.type === '安全管理' || record.type === 'SAFETY')) || \n            (isOperationAdmin && record.type !== '安全管理' && record.type !== 'SAFETY') || \n            isDepartmentManager\n          )\n        ) && (\n          <Button \n            type=\"primary\" \n            onClick={() => handleReview(record, 'second')}\n            style={{ fontSize: '14px' }}\n          >\n            二级审核\n          </Button>\n        );\n\n        return (\n          <Space>\n            {firstReviewButton}\n            {secondReviewButton}\n            <Button \n              type=\"default\" \n              icon={<FileTextOutlined />} \n              onClick={() => handleViewDetail(record._id)}\n              style={{ fontSize: '14px' }}\n            >\n              查看详情\n            </Button>\n          </Space>\n        );\n      }\n    }\n  ];\n\n  // 移动端卡片式列定义\n  const mobileColumns = [\n    {\n      title: '建议信息',\n      dataIndex: 'title',\n      key: 'title',\n      render: (text, record) => {\n        const currentStatus = getCurrentStatus(record);\n        // 检查是否可以进行一级审核\n        const canFirstReview = (\n          currentStatus === 'PENDING_FIRST_REVIEW' && \n          (isSupervisor || isDepartmentManager)\n        );\n\n        // 检查是否可以进行二级审核\n        const canSecondReview = (\n          currentStatus === 'PENDING_SECOND_REVIEW' && \n          (\n            (isSafetyAdmin && (record.type === '安全管理' || record.type === 'SAFETY')) || \n            (isOperationAdmin && record.type !== '安全管理' && record.type !== 'SAFETY') || \n            isDepartmentManager\n          )\n        );\n\n        return (\n          <div style={{ padding: '8px 0' }}>\n            <div style={{ fontSize: '16px', fontWeight: 'bold', marginBottom: '8px' }}>\n              {text}\n            </div>\n            \n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '6px', marginBottom: '10px' }}>\n              <Tag \n                color={TYPE_COLORS[record.type] || 'default'}\n                style={{ padding: '2px 6px', fontSize: '12px' }}\n              >\n                {SUGGESTION_TYPES[record.type] || record.type}\n              </Tag>\n              \n              <Tag \n                color={STATUS_COLORS[currentStatus] || 'default'}\n                style={{ padding: '2px 6px', fontSize: '12px' }}\n              >\n                {SUGGESTION_STATUS[currentStatus] || currentStatus}\n              </Tag>\n            </div>\n            \n            <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '12px', color: '#888', marginBottom: '10px' }}>\n              <span>{record.submitter?.name || '未知'} ({record.team || '未知班组'})</span>\n              <span>{record.createdAt ? new Date(record.createdAt).toLocaleDateString() : '未知'}</span>\n            </div>\n            \n            <div style={{ display: 'flex', gap: '8px', marginTop: '10px' }}>\n              {canFirstReview && (\n                <Button \n                  type=\"primary\" \n                  size=\"small\"\n                  onClick={() => handleReview(record, 'first')}\n                >\n                  一级审核\n                </Button>\n              )}\n              \n              {canSecondReview && (\n                <Button \n                  type=\"primary\" \n                  size=\"small\"\n                  onClick={() => handleReview(record, 'second')}\n                >\n                  二级审核\n                </Button>\n              )}\n              \n              <Button \n                type=\"default\" \n                size=\"small\"\n                onClick={() => handleViewDetail(record._id)}\n              >\n                查看详情\n              </Button>\n            </div>\n          </div>\n        );\n      }\n    }\n  ];\n\n  // 表格变化处理函数（排序、分页）\n  const handleTableChange = (pagination, filters, sorter) => {\n    console.log('Table change:', pagination, filters, sorter);\n    // 如果 sorter 有变化，更新排序状态\n    if (sorter.field !== sortInfo.field || sorter.order !== sortInfo.order) {\n      setSortInfo({\n        field: sorter.field,\n        order: sorter.order,\n      });\n      // fetchPendingReviews 将在 sortInfo 状态更新后通过 useEffect 自动触发\n    }\n    // 如果需要处理分页或过滤，可以在这里添加逻辑\n  };\n\n  // 筛选出一级审核和二级审核的建议\n  const firstReviewSuggestions = pendingReviews.filter(item => {\n    const currentStatus = getCurrentStatus(item);\n    // 使用getCurrentStatus后，状态已经标准化为英文键名\n    return currentStatus === 'PENDING_FIRST_REVIEW';\n  });\n  \n  const secondReviewSuggestions = pendingReviews.filter(item => {\n    const currentStatus = getCurrentStatus(item);\n    // 使用getCurrentStatus后，状态已经标准化为英文键名\n    return currentStatus === 'PENDING_SECOND_REVIEW';\n  });\n\n  return (\n    <div className=\"responsive-container\" style={{ padding: isMobile ? '12px' : '24px' }}>\n      <Card bodyStyle={{ padding: isMobile ? '12px' : '24px' }}>\n        <Title level={isMobile ? 4 : 3} style={{ fontSize: isMobile ? '18px' : '20px', marginBottom: isMobile ? '16px' : '20px' }}>建议审核管理</Title>\n        \n        {!canAccessFirstTab && !canAccessSecondTab ? (\n          <Alert\n            message=\"无访问权限\"\n            description=\"您没有权限访问审核管理页面\"\n            type=\"error\"\n            showIcon\n          />\n        ) : (\n          <Tabs activeKey={activeTab} onChange={setActiveTab}>\n            {canAccessFirstTab && (\n              <TabPane \n                tab={\n                  <span>\n                    一级审核\n                    <Badge count={firstReviewSuggestions.length} offset={[5, -5]} style={{ backgroundColor: '#FF4D4F' }} />\n                  </span>\n                }\n                key=\"first\"\n              >\n                {firstReviewSuggestions.length === 0 ? (\n                  <Alert\n                    message=\"暂无待审核建议\"\n                    description=\"当前没有需要进行一级审核的建议\"\n                    type=\"info\"\n                    showIcon\n                  />\n                ) : (\n                  <Table\n                    columns={isMobile ? mobileColumns : desktopColumns}\n                    dataSource={firstReviewSuggestions}\n                    rowKey=\"_id\"\n                    loading={loading}\n                    pagination={{ pageSize: isMobile ? 5 : 10 }}\n                    style={{ fontSize: isMobile ? '13px' : '14px' }}\n                    className=\"suggestions-table\"\n                    bordered\n                    rowClassName={() => 'suggestion-row'}\n                    onChange={handleTableChange}\n                    scroll={isMobile ? {} : {}}\n                    size={isMobile ? \"small\" : \"default\"}\n                  />\n                )}\n              </TabPane>\n            )}\n\n            {canAccessSecondTab && (\n              <TabPane \n                tab={\n                  <span>\n                    二级审核\n                    <Badge count={secondReviewSuggestions.length} offset={[5, -5]} style={{ backgroundColor: '#FF4D4F' }} />\n                  </span>\n                }\n                key=\"second\"\n              >\n                {secondReviewSuggestions.length === 0 ? (\n                  <Alert\n                    message=\"暂无待审核建议\"\n                    description=\"当前没有需要进行二级审核的建议\"\n                    type=\"info\"\n                    showIcon\n                  />\n                ) : (\n                  <Table\n                    columns={isMobile ? mobileColumns : desktopColumns}\n                    dataSource={secondReviewSuggestions}\n                    rowKey=\"_id\"\n                    loading={loading}\n                    pagination={{ pageSize: isMobile ? 5 : 10 }}\n                    style={{ fontSize: isMobile ? '13px' : '14px' }}\n                    className=\"suggestions-table\"\n                    bordered\n                    rowClassName={() => 'suggestion-row'}\n                    onChange={handleTableChange}\n                    scroll={isMobile ? {} : {}}\n                    size={isMobile ? \"small\" : \"default\"}\n                  />\n                )}\n              </TabPane>\n            )}\n          </Tabs>\n        )}\n\n        <Modal\n          title={`${reviewType === 'first' ? '一级' : '二级'}审核`}\n          visible={reviewModalVisible}\n          onCancel={() => {\n            setReviewModalVisible(false);\n            reviewForm.resetFields();\n          }}\n          footer={null}\n          bodyStyle={{ fontSize: '14px' }}\n          width={isMobile ? '95%' : 520}\n        >\n          <Form\n            form={reviewForm}\n            onFinish={handleSubmitReview}\n            layout=\"vertical\"\n          >\n            <Form.Item\n              name=\"result\"\n              label=\"审核结果\"\n              rules={[{ required: true, message: '请选择审核结果' }]}\n            >\n              <Radio.Group style={{ fontSize: '14px' }}>\n                <Radio value=\"approve\">通过</Radio>\n                <Radio value=\"reject\">拒绝</Radio>\n              </Radio.Group>\n            </Form.Item>\n\n            <Form.Item\n              name=\"comment\"\n              label=\"审核意见\"\n              rules={[{ required: true, message: '请输入审核意见' }]}\n            >\n              <Input.TextArea rows={isMobile ? 3 : 4} style={{ fontSize: '14px' }} />\n            </Form.Item>\n\n            <Form.Item>\n              <Row gutter={16}>\n                <Col span={isMobile ? 12 : 8}>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    style={{ width: '100%', fontSize: '14px' }}\n                  >\n                    提交\n                  </Button>\n                </Col>\n                <Col span={isMobile ? 12 : 8}>\n                  <Button \n                    onClick={() => {\n                      setReviewModalVisible(false);\n                      reviewForm.resetFields();\n                    }}\n                    style={{ width: '100%', fontSize: '14px' }}\n                  >\n                    取消\n                  </Button>\n                </Col>\n              </Row>\n            </Form.Item>\n          </Form>\n        </Modal>\n      </Card>\n    </div>\n  );\n};\n\nexport default ReviewList; ","import { REVIEW_STATUS } from '../constants/suggestions';\r\n\r\n/**\r\n * 获取建议的当前状态\r\n * @param {Object} suggestion 建议对象\r\n * @returns {string} 建议的当前状态\r\n */\r\nexport const getCurrentStatus = (suggestion) => {\r\n  if (!suggestion) return '';\r\n  \r\n  const statusKey = suggestion.reviewStatus || suggestion.status;\r\n  \r\n  // 如果状态是中文，尝试将其映射回英文键\r\n  if (typeof statusKey === 'string' && /[\\u4e00-\\u9fa5]/.test(statusKey)) {\r\n    const statusEntry = Object.entries(REVIEW_STATUS).find(([_, value]) => value === statusKey);\r\n    return statusEntry ? statusEntry[0] : statusKey;\r\n  }\r\n  \r\n  return statusKey;\r\n}; "],"names":["REVIEW_STATUS","PENDING_FIRST_REVIEW","PENDING_SECOND_REVIEW","APPROVED","REJECTED","REVIEW_STATUS_COLORS","REVIEW_STATUS_TRANSITIONS","IMPLEMENTATION_STATUS","NOT_STARTED","CONTACTING","IN_PROGRESS","DELAYED","COMPLETED","CANCELLED","IMPLEMENTATION_STATUS_TRANSITIONS","IMPLEMENTATION_STATUS_COLORS","SUGGESTION_STATUS","NOT_IMPLEMENTED","IMPLEMENTING","SUGGESTION_TYPES","SAFETY","ELECTRICAL","MECHANICAL","KEXIN_AUTOMATION","KEXIN_MONITORING","OTHER","REVIEW_LEVELS","FIRST_LEVEL","SECOND_LEVEL","REVIEW_RESULTS","PENDING","STATUS_COLORS","TYPE_COLORS","API_URL","suggestionService","getCreateData","async","api","get","error","console","submitSuggestion","log","formData","response","post","headers","undefined","_error$response","data","getSuggestions","params","arguments","length","queryString","URLSearchParams","toString","result","pagination","current","parseInt","page","pageSize","limit","total","Array","isArray","suggestions","warn","arrayProp","Object","entries","find","_ref","_","value","paginationProp","_ref2","key","paginationData","currentPage","size","totalCount","totalItems","_error$response2","message","getSuggestionById","id","validateSuggestionData","updateSuggestionStatus","status","comment","put","firstReview","approved","comments","_error$response3","secondReview","_error$response4","updateSuggestion","updateData","addComment","content","getAllSuggestions","axios","getSuggestion","createSuggestion","suggestionData","deleteSuggestion","delete","success","_error$response5","_error$response6","_error$response6$data","submitForReview","reviewSuggestion","reviewData","updateImplementation","implementationData","statusMap","updatePayload","evaluation","_error$response7","_error$response8","_error$response8$data","getImplementationStats","submitReview","scoreSuggestion","score","suggestion","implementation","_implementation$imple","responsiblePerson","implementer","name","startDate","plannedEndDate","plannedCompletionDate","actualEndDate","actualCompletionDate","notes","history","reviewStatus","implementationStatus","require","submitter","_id","map","user","createdAt","Date","toISOString","Title","Text","TextArea","Typography","TabPane","Tabs","ReviewList","navigate","useNavigate","pendingReviews","setPendingReviews","useState","loading","setLoading","currentUser","setCurrentUser","activeTab","setActiveTab","reviewModalVisible","setReviewModalVisible","currentSuggestion","setCurrentSuggestion","reviewForm","Form","useForm","reviewType","setReviewType","sortInfo","setSortInfo","field","order","isMobile","setIsMobile","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","isSupervisor","role","isSafetyAdmin","isOperationAdmin","isDepartmentManager","canAccessFirstTab","canAccessSecondTab","authService","getCurrentUser","fetchCurrentUser","fetchPendingReviews","useCallback","sortBy","sortOrder","suggestionsToShow","handleViewDetail","handleReview","record","type","desktopColumns","title","dataIndex","sorter","render","text","_jsx","Button","onClick","style","fontSize","padding","textAlign","height","lineHeight","children","whiteSpace","wordBreak","Tag","color","borderRadius","currentStatus","getCurrentStatus","displayColor","a","b","_a$scoring","_b$scoring","scoreA","scoring","scoreB","toFixed","team","toLocaleString","firstReviewButton","secondReviewButton","_jsxs","Space","icon","FileTextOutlined","mobileColumns","_record$submitter","canFirstReview","canSecondReview","fontWeight","marginBottom","display","flexWrap","gap","justifyContent","toLocaleDateString","marginTop","handleTableChange","filters","firstReviewSuggestions","filter","item","secondReviewSuggestions","className","Card","bodyStyle","level","activeKey","onChange","tab","Badge","count","offset","backgroundColor","Alert","description","showIcon","Table","columns","dataSource","rowKey","bordered","rowClassName","scroll","Modal","visible","onCancel","resetFields","footer","width","form","onFinish","values","suggestionId","reviewerId","JSON","stringify","setTimeout","_error$response$data","layout","Item","label","rules","required","Radio","Input","rows","Row","gutter","Col","span","htmlType","statusKey","test","statusEntry"],"sourceRoot":""}