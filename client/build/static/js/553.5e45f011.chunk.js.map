{"version":3,"file":"static/js/553.5e45f011.chunk.js","mappings":"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","sources":["pages/Suggestions/List.js","utils/suggestionUtils.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Table,\n  Tag,\n  Space,\n  Button,\n  message,\n  Input,\n  Select,\n  Row,\n  Col,\n  Form\n} from 'antd';\nimport { EyeOutlined, EditOutlined, SearchOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { suggestionService } from '../../services/suggestionService';\nimport { authService } from '../../services/authService';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  SUGGESTION_TYPES,\n  REVIEW_STATUS,\n  STATUS_COLORS,\n  TYPE_COLORS,\n  IMPLEMENTATION_STATUS,\n  IMPLEMENTATION_STATUS_COLORS\n} from '../../constants/suggestions';\nimport { getStatusDisplayText, getStatusColor } from '../../utils/statusUtils';\nimport { getCurrentStatus } from '../../utils/suggestionUtils';\n\nconst { Option } = Select;\n\nconst SuggestionList = () => {\n  console.log('STATUS_COLORS:', STATUS_COLORS);\n  \n  const [suggestions, setSuggestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [pagination, setPagination] = useState({\n    current: 1,\n    pageSize: 10,\n    total: 0\n  });\n  const [sorter, setSorter] = useState({ field: 'createdAt', order: 'descend' });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterType, setFilterType] = useState('ALL');\n  const [filterReviewStatus, setFilterReviewStatus] = useState('ALL');\n  const [filterImplementationStatus, setFilterImplementationStatus] = useState('ALL');\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n\n  const currentUser = authService.getCurrentUser();\n  const isManager = currentUser?.role === '部门经理';\n  const isSupervisor = currentUser?.role === '值班主任';\n  const isSafetyAdmin = currentUser?.role === '安全科管理人员';\n  const isOperationAdmin = currentUser?.role === '运行科管理人员';\n\n  const navigate = useNavigate();\n\n  const fetchSuggestions = async () => {\n    setLoading(true);\n    const params = {\n      page: pagination.current,\n      limit: pagination.pageSize,\n      sortBy: sorter.field,\n      sortOrder: sorter.order === 'ascend' ? 'asc' : 'desc',\n    };\n\n    if (searchTerm) {\n      params.title = searchTerm;\n    }\n    if (filterType && filterType !== 'ALL') {\n      params.type = filterType;\n    }\n    if (filterReviewStatus && filterReviewStatus !== 'ALL') {\n      params.reviewStatus = filterReviewStatus; \n    }\n    if (filterImplementationStatus && filterImplementationStatus !== 'ALL') {\n      params.implementationStatus = filterImplementationStatus;\n    }\n    \n    Object.keys(params).forEach(key => (params[key] == null) && delete params[key]);\n\n    console.log('Fetching suggestions with params:', params);\n\n    try {\n      const response = await suggestionService.getSuggestions(params);\n      console.log('获取到的建议列表数据:', response);\n      \n      const { data, pagination: responsePagination } = response;\n      setSuggestions(data || []);\n      \n      // 更详细的日志\n      console.log('获取到的建议数量:', data?.length || 0);\n      console.log('原始分页信息:', responsePagination);\n      \n      // 确保分页信息正确更新\n      if (responsePagination) {\n        const newPagination = {\n          ...pagination,\n          current: parseInt(responsePagination.current) || pagination.current,\n          pageSize: parseInt(responsePagination.pageSize) || pagination.pageSize,\n          total: parseInt(responsePagination.total) || 0\n        };\n        console.log('更新后的分页信息:', newPagination);\n        setPagination(newPagination);\n      } else {\n        // 如果没有分页信息，则至少更新total\n        const newPagination = { \n          ...pagination, \n          total: data?.length || 0,\n          current: params.page || pagination.current\n        };\n        console.log('没有分页信息，使用默认值:', newPagination);\n        setPagination(newPagination);\n      }\n    } catch (error) {\n      console.error('获取建议列表失败:', error);\n      message.error('获取建议列表失败');\n      setSuggestions([]);\n      setPagination(prev => ({ ...prev, total: 0, current: 1}));\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  useEffect(() => {\n    fetchSuggestions();\n  }, [pagination.current, pagination.pageSize, sorter, searchTerm, filterType, filterReviewStatus, filterImplementationStatus]);\n\n  useEffect(() => {\n    const handleFocus = () => {\n      console.log('SuggestionList window focused, refreshing data with current filters...');\n      fetchSuggestions();\n    };\n\n    window.addEventListener('focus', handleFocus);\n    return () => {\n      window.removeEventListener('focus', handleFocus);\n    };\n  }, []);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n    \n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const handleSearch = (value) => {\n    setSearchTerm(value);\n    setPagination(prev => ({ ...prev, current: 1 }));\n  };\n\n  const handleTypeChange = (value) => {\n    setFilterType(value);\n    setPagination(prev => ({ ...prev, current: 1 }));\n  };\n\n  const handleReviewStatusChange = (value) => {\n    setFilterReviewStatus(value);\n    setPagination(prev => ({ ...prev, current: 1 }));\n  };\n\n  const handleImplementationStatusChange = (value) => {\n    setFilterImplementationStatus(value);\n    setPagination(prev => ({ ...prev, current: 1 }));\n  };\n\n  const handleTableChange = (newPageInfo, tableFilters, newSorter) => {\n    console.log('Table changed:', newPageInfo, tableFilters, newSorter);\n    setPagination(prev => ({\n        ...prev,\n        current: newPageInfo.current,\n        pageSize: newPageInfo.pageSize,\n    }));\n    \n    if (newSorter && newSorter.field) {\n        setSorter({ field: newSorter.field, order: newSorter.order });\n    } else {\n        setSorter({ field: 'createdAt', order: 'descend' });\n    }\n  };\n\n  const handleView = (record) => {\n    navigate(`/suggestions/${record._id}`);\n  };\n\n  const columns = [\n    {\n      title: '标题',\n      dataIndex: 'title',\n      key: 'title',\n      width: '20%',\n      sorter: true,\n      render: (text, record) => (\n        <Link to={`/suggestions/${record._id}`} style={{ fontSize: '14px' }}>\n          {text}\n        </Link>\n      )\n    },\n    {\n      title: '类型',\n      dataIndex: 'type',\n      key: 'type',\n      width: '10%',\n      sorter: true,\n      render: (type) => (\n        <Tag \n          color={TYPE_COLORS[type] || 'default'}\n          style={{ \n            padding: '4px 8px', \n            borderRadius: '4px', \n            fontSize: '14px'\n          }}\n        >\n          {SUGGESTION_TYPES[type] || type}\n        </Tag>\n      )\n    },\n    {\n      title: '提交人',\n      dataIndex: ['submitter', 'name'],\n      key: 'submitter',\n      width: '10%',\n      sorter: true,\n      render: (text, record) => <span style={{ fontSize: '14px' }}>{record.submitter ? record.submitter.name : '未知'}</span>\n    },\n    {\n      title: '提交时间',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n      width: '15%',\n      sorter: true,\n      render: (text) => <span style={{ fontSize: '14px' }}>{text ? new Date(text).toLocaleString() : '未知'}</span>\n    },\n    {\n      title: '建议状态',\n      dataIndex: 'status',\n      key: 'status',\n      width: '10%',\n      sorter: true,\n      render: (status, record) => {\n        const currentStatus = getCurrentStatus(record);\n        console.log('状态渲染:', {\n          原始状态: status,\n          当前状态: currentStatus,\n          状态颜色: STATUS_COLORS[currentStatus],\n          状态显示文本: REVIEW_STATUS[currentStatus] || currentStatus\n        });\n        \n        const displayColor = STATUS_COLORS[currentStatus] || 'default';\n        \n        return (\n          <Tag \n            color={displayColor}\n            style={{ \n              padding: '4px 8px', \n              borderRadius: '4px', \n              fontSize: '14px'\n            }}\n          >\n            {REVIEW_STATUS[currentStatus] || currentStatus}\n          </Tag>\n        );\n      }\n    },\n    {\n      title: '实施状态',\n      dataIndex: 'implementationStatus',\n      key: 'implementationStatus',\n      width: '10%',\n      sorter: true,\n      render: (status, record) => {\n        const implStatus = record.implementation?.status || status || 'NOT_STARTED';\n        const statusText = getStatusDisplayText(implStatus, 'implementation');\n        const statusColor = getStatusColor(implStatus, 'implementation');\n\n        return (\n          <Tag\n            color={statusColor}\n            style={{\n              padding: '4px 8px',\n              borderRadius: '4px',\n              fontSize: '14px'\n            }}\n          >\n            {statusText}\n          </Tag>\n        );\n      }\n    },\n    {\n      title: '得分',\n      dataIndex: ['scoring', 'score'],\n      key: 'score',\n      width: '8%',\n      sorter: (a, b) => {\n        const scoreA = a.scoring?.score;\n        const scoreB = b.scoring?.score;\n        \n        if (scoreA !== undefined && scoreA !== null && \n            scoreB !== undefined && scoreB !== null) {\n          return scoreA - scoreB;\n        }\n        \n        if (scoreA === undefined || scoreA === null) return 1;\n        if (scoreB === undefined || scoreB === null) return -1;\n        return 0;\n      },\n      render: (score) => (\n        <span style={{ fontSize: '14px', fontWeight: 'bold' }}>\n          {typeof score === 'number' ? score.toFixed(1) : '-'}\n        </span>\n      )\n    },\n    {\n      title: '操作',\n      key: 'action',\n      render: (_, record) => {\n        const currentStatus = getCurrentStatus(record);\n        return (\n          <Space>\n            <Button\n              type=\"link\"\n              icon={<EyeOutlined />}\n              onClick={() => handleView(record)}\n              style={{ fontSize: '14px' }}\n            >\n              查看\n            </Button>\n            {isManager && currentStatus === 'PENDING_FIRST_REVIEW' && (\n              <Button\n                type=\"link\"\n                icon={<EditOutlined />}\n                onClick={() => navigate(`/suggestions/${record._id}`)}\n                style={{ fontSize: '14px' }}\n              >\n                一级审核\n              </Button>\n            )}\n            {isSafetyAdmin && currentStatus === 'PENDING_SECOND_REVIEW' && record.type === 'SAFETY' && (\n              <Button\n                type=\"link\"\n                icon={<EditOutlined />}\n                onClick={() => navigate(`/suggestions/${record._id}`)}\n                style={{ fontSize: '14px' }}\n              >\n                二级审核\n              </Button>\n            )}\n            {isOperationAdmin && currentStatus === 'PENDING_SECOND_REVIEW' && record.type !== 'SAFETY' && (\n              <Button\n                type=\"link\"\n                icon={<EditOutlined />}\n                onClick={() => navigate(`/suggestions/${record._id}`)}\n                style={{ fontSize: '14px' }}\n              >\n                二级审核\n              </Button>\n            )}\n            {isManager && currentStatus === 'PENDING_SECOND_REVIEW' && (\n              <Button\n                type=\"link\"\n                icon={<EditOutlined />}\n                onClick={() => navigate(`/suggestions/${record._id}`)}\n                style={{ fontSize: '14px' }}\n              >\n                二级审核\n              </Button>\n            )}\n          </Space>\n        );\n      },\n    },\n  ];\n\n  const mobileColumns = [\n    {\n      title: '标题',\n      dataIndex: 'title',\n      key: 'title',\n      render: (text, record) => (\n        <div onClick={() => handleView(record)} style={{ cursor: 'pointer' }}>\n          <div style={{ fontSize: '14px', fontWeight: 'bold', marginBottom: '8px' }}>{text}</div>\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: '4px', marginBottom: '8px' }}>\n            <Tag \n              color={TYPE_COLORS[record.type] || 'default'}\n              style={{ padding: '2px 4px', fontSize: '12px' }}\n            >\n              {SUGGESTION_TYPES[record.type] || record.type}\n            </Tag>\n            \n            {(() => {\n              const currentStatus = getCurrentStatus(record);\n              const displayColor = STATUS_COLORS[currentStatus] || 'default';\n              return (\n                <Tag \n                  color={displayColor}\n                  style={{ padding: '2px 4px', fontSize: '12px' }}\n                >\n                  {REVIEW_STATUS[currentStatus] || currentStatus}\n                </Tag>\n              );\n            })()}\n            \n            {(() => {\n              const implStatus = record.implementation?.status || record.implementationStatus || 'NOT_STARTED';\n              const statusText = getStatusDisplayText(implStatus, 'implementation');\n              const statusColor = getStatusColor(implStatus, 'implementation');\n              return (\n                <Tag\n                  color={statusColor}\n                  style={{ padding: '2px 4px', fontSize: '12px' }}\n                >\n                  {statusText}\n                </Tag>\n              );\n            })()}\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '12px', color: '#999' }}>\n            <span>{record.submitter ? record.submitter.name : '未知'}</span>\n            <span>{record.createdAt ? new Date(record.createdAt).toLocaleDateString() : '未知'}</span>\n            {typeof record.scoring?.score === 'number' && (\n              <span style={{ fontWeight: 'bold' }}>得分: {record.scoring.score.toFixed(1)}</span>\n            )}\n          </div>\n        </div>\n      )\n    }\n  ];\n\n  return (\n    <div className=\"responsive-container\" style={{ padding: '24px' }}>\n      <Form layout={isMobile ? \"vertical\" : \"inline\"} style={{ marginBottom: '20px' }}>\n        <Row gutter={isMobile ? 8 : 16} style={{ width: '100%' }}>\n          <Col xs={24} sm={12} md={8} lg={6} xl={5}>\n            <Form.Item style={{ width: '100%', marginBottom: isMobile ? '12px' : '20px' }} label=\"搜索\">\n              <Input.Search\n                placeholder=\"建议标题...\"\n                allowClear\n                onSearch={handleSearch}\n                onChange={(e) => {\n                  if (!e.target.value) handleSearch('');\n                }}\n                enterButton\n              />\n            </Form.Item>\n          </Col>\n          <Col xs={24} sm={12} md={8} lg={6} xl={5}>\n            <Form.Item style={{ width: '100%', marginBottom: isMobile ? '12px' : '20px' }} label=\"类型\">\n              <Select\n                value={filterType}\n                onChange={handleTypeChange}\n                style={{ width: '100%' }}\n                placeholder=\"所有类型\"\n              >\n                <Option value=\"ALL\">所有类型</Option>\n                {Object.entries(SUGGESTION_TYPES).map(([key, value]) => (\n                  <Option key={key} value={key}>{value}</Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col xs={24} sm={12} md={8} lg={6} xl={5}>\n            <Form.Item style={{ width: '100%', marginBottom: isMobile ? '12px' : '20px' }} label=\"建议状态\">\n              <Select\n                value={filterReviewStatus}\n                onChange={handleReviewStatusChange}\n                style={{ width: '100%' }}\n                placeholder=\"所有建议状态\"\n              >\n                <Option value=\"ALL\">所有建议状态</Option>\n                {Object.entries(REVIEW_STATUS).map(([key, value]) => (\n                  <Option key={key} value={key}>{value}</Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col xs={24} sm={12} md={8} lg={6} xl={5}>\n            <Form.Item style={{ width: '100%', marginBottom: isMobile ? '12px' : '20px' }} label=\"实施状态\">\n              <Select\n                value={filterImplementationStatus}\n                onChange={handleImplementationStatusChange}\n                style={{ width: '100%' }}\n                placeholder=\"所有实施状态\"\n              >\n                <Option value=\"ALL\">所有实施状态</Option>\n                {Object.entries(IMPLEMENTATION_STATUS).map(([key, value]) => (\n                  <Option key={key} value={key}>{value}</Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n\n      <Table\n        columns={isMobile ? mobileColumns : columns}\n        dataSource={suggestions}\n        rowKey=\"_id\"\n        pagination={{\n          current: pagination.current,\n          pageSize: pagination.pageSize,\n          total: pagination.total,\n          showSizeChanger: true,\n          showQuickJumper: true,\n          showTotal: (total) => `共 ${total} 条建议`\n        }}\n        loading={loading}\n        onChange={handleTableChange}\n        style={{ fontSize: isMobile ? '13px' : '14px' }}\n        className=\"suggestions-table\"\n        bordered\n        rowClassName={() => 'suggestion-row'}\n        scroll={isMobile ? {} : {}}\n      />\n    </div>\n  );\n};\n\nexport default SuggestionList; ","import { REVIEW_STATUS } from '../constants/suggestions';\r\n\r\n/**\r\n * 获取建议的当前状态\r\n * @param {Object} suggestion 建议对象\r\n * @returns {string} 建议的当前状态\r\n */\r\nexport const getCurrentStatus = (suggestion) => {\r\n  if (!suggestion) return '';\r\n  \r\n  const statusKey = suggestion.reviewStatus || suggestion.status;\r\n  \r\n  // 如果状态是中文，尝试将其映射回英文键\r\n  if (typeof statusKey === 'string' && /[\\u4e00-\\u9fa5]/.test(statusKey)) {\r\n    const statusEntry = Object.entries(REVIEW_STATUS).find(([_, value]) => value === statusKey);\r\n    return statusEntry ? statusEntry[0] : statusKey;\r\n  }\r\n  \r\n  return statusKey;\r\n}; "],"names":["Option","Select","SuggestionList","console","log","STATUS_COLORS","suggestions","setSuggestions","useState","loading","setLoading","pagination","setPagination","current","pageSize","total","sorter","setSorter","field","order","searchTerm","setSearchTerm","filterType","setFilterType","filterReviewStatus","setFilterReviewStatus","filterImplementationStatus","setFilterImplementationStatus","isMobile","setIsMobile","window","innerWidth","currentUser","authService","getCurrentUser","isManager","role","isSafetyAdmin","isOperationAdmin","navigate","useNavigate","fetchSuggestions","async","params","page","limit","sortBy","sortOrder","title","type","reviewStatus","implementationStatus","Object","keys","forEach","key","response","suggestionService","getSuggestions","data","responsePagination","length","newPagination","parseInt","error","message","prev","useEffect","handleFocus","addEventListener","removeEventListener","handleResize","handleSearch","value","handleView","record","_id","columns","dataIndex","width","render","text","_jsx","Link","to","style","fontSize","children","Tag","color","TYPE_COLORS","padding","borderRadius","SUGGESTION_TYPES","submitter","name","Date","toLocaleString","status","currentStatus","getCurrentStatus","原始状态","当前状态","状态颜色","状态显示文本","REVIEW_STATUS","displayColor","_record$implementatio","implStatus","implementation","statusText","getStatusDisplayText","statusColor","getStatusColor","a","b","_a$scoring","_b$scoring","scoreA","scoring","score","scoreB","undefined","fontWeight","toFixed","_","_jsxs","Space","Button","icon","EyeOutlined","onClick","EditOutlined","mobileColumns","_record$scoring","cursor","marginBottom","display","flexWrap","gap","_record$implementatio2","justifyContent","createdAt","toLocaleDateString","className","Form","layout","Row","gutter","Col","xs","sm","md","lg","xl","Item","label","Input","Search","placeholder","allowClear","onSearch","onChange","e","target","enterButton","entries","map","_ref","_ref2","IMPLEMENTATION_STATUS","_ref3","Table","dataSource","rowKey","showSizeChanger","showQuickJumper","showTotal","handleTableChange","newPageInfo","tableFilters","newSorter","bordered","rowClassName","scroll","suggestion","statusKey","test","statusEntry","find"],"sourceRoot":""}