{"version":3,"file":"static/js/488.5ae8bf63.chunk.js","mappings":"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","sources":["pages/Suggestions/Implementation/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  Table,\n  Tag,\n  Button,\n  Space,\n  message,\n  Typography,\n  Modal,\n  Form,\n  Input,\n  DatePicker,\n  Select,\n  Upload,\n  Timeline,\n  Alert,\n  Tooltip,\n  Collapse,\n  Empty,\n  Row,\n  Col\n} from 'antd';\nimport {\n  FileTextOutlined,\n  UploadOutlined,\n  CheckCircleOutlined,\n  ClockCircleOutlined,\n  ToolOutlined,\n  InboxOutlined,\n  PlusOutlined,\n  SearchOutlined\n} from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\nimport moment from 'moment';\nimport { suggestionService } from '../../../services/suggestionService';\nimport { authService } from '../../../services/authService';\nimport { \n  SUGGESTION_TYPES, \n  SUGGESTION_STATUS, \n  STATUS_COLORS, \n  TYPE_COLORS,\n  IMPLEMENTATION_STATUS,\n  IMPLEMENTATION_STATUS_COLORS,\n  REVIEW_STATUS\n} from '../../../constants/suggestions';\nimport { getStatusDisplayText, getStatusColor } from '../../../utils/statusUtils';\n\nconst { Title, Text, Paragraph } = Typography;\nconst { TextArea } = Input;\nconst { Option } = Select;\nconst { Panel } = Collapse;\nconst { Dragger } = Upload;\n\nconst ImplementationList = () => {\n  const navigate = useNavigate();\n  const [form] = Form.useForm();\n  const [implementationSuggestions, setImplementationSuggestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [updateModalVisible, setUpdateModalVisible] = useState(false);\n  const [currentSuggestion, setCurrentSuggestion] = useState(null);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [detailVisible, setDetailVisible] = useState(false);\n  const [currentStatusValue, setCurrentStatusValue] = useState('未开始');\n  const [pagination, setPagination] = useState({ current: 1, pageSize: 10, total: 0 });\n  const [sorter, setSorter] = useState({ field: 'updatedAt', order: 'descend' });\n  \n  // New states for global filters\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterType, setFilterType] = useState('ALL');\n  const [filterImplementationStatus, setFilterImplementationStatus] = useState('ALL');\n\n  // 表格变化处理器 (分页, 排序) - filters from table columns are not used with global filters\n  const handleTableChange = (newPagination, tableColumnFilters, sorterParam) => {\n    console.log('Table changed:', newPagination, tableColumnFilters, sorterParam);\n    setPagination(prev => ({\n      ...prev,\n      current: newPagination.current,\n      pageSize: newPagination.pageSize,\n    }));\n    if (sorterParam && sorterParam.field && sorterParam.order) {\n      setSorter({ field: sorterParam.field, order: sorterParam.order });\n    } else {\n      setSorter({ field: 'updatedAt', order: 'descend' });\n    }\n  };\n\n  // 获取当前用户信息\n  const fetchCurrentUser = async () => {\n    try {\n      const user = await authService.getCurrentUser();\n      if (!user) {\n        message.error('请先登录');\n        navigate('/login');\n        return;\n      }\n      setCurrentUser(user);\n    } catch (error) {\n      console.error('获取用户信息失败:', error);\n      message.error('获取用户信息失败');\n      navigate('/login');\n    }\n  };\n  \n  useEffect(() => {\n    fetchCurrentUser();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [navigate]);\n\n  // 获取待实施和实施中的建议 - Modified to include global filters\n  const fetchImplementationSuggestions = async () => { // Removed page, pageSize, currentSorter params\n    if (!currentUser) return; // Don't fetch if no user\n    setLoading(true);\n    const params = {\n      page: pagination.current,\n      pageSize: pagination.pageSize,\n      sortBy: sorter.field,\n      sortOrder: sorter.order === 'ascend' ? 'asc' : 'desc',\n      reviewStatus: 'APPROVED', // Core filter for this page\n      includeImplementation: true,\n      forceRefresh: true \n    };\n\n    if (searchTerm) {\n      params.title = searchTerm; // Changed to 'title'\n    }\n    if (filterType && filterType !== 'ALL') {\n      params.type = filterType;\n    }\n    if (filterImplementationStatus && filterImplementationStatus !== 'ALL') {\n      params.implementationStatus = filterImplementationStatus;\n    }\n    \n    // Remove null or undefined params to keep query clean\n    Object.keys(params).forEach(key => (params[key] == null || params[key] === '') && delete params[key]);\n\n    console.log('开始获取实施建议数据...');\n    console.log('请求参数:', params);\n    \n    try {\n      const response = await suggestionService.getSuggestions(params);\n      console.log('获取到实施建议数据:', response);\n      \n      if (response && response.data && response.pagination) {\n        setImplementationSuggestions(response.data);\n        setPagination(prev => ({\n          ...prev,\n          current: response.pagination.current,\n          pageSize: response.pagination.pageSize,\n          total: response.pagination.total,\n        }));\n      } else {\n        setImplementationSuggestions([]);\n        setPagination(prev => ({ ...prev, total: 0 }));\n        console.warn('从API获取的数据格式不符合预期或数据为空');\n      }\n    } catch (error) {\n      console.error('获取待实施建议失败:', error);\n      message.error('获取待实施建议失败');\n      setImplementationSuggestions([]);\n      setPagination(prev => ({ ...prev, total: 0, current: 1 }));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // useEffect for data fetching based on dependencies\n  useEffect(() => {\n    if (currentUser) { // Ensure currentUser is loaded before fetching\n      fetchImplementationSuggestions();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentUser, pagination.current, pagination.pageSize, sorter, searchTerm, filterType, filterImplementationStatus]);\n\n  // Handlers for global filter changes\n  const handleGlobalSearch = (value) => {\n    setSearchTerm(value);\n    setPagination(prev => ({ ...prev, current: 1 })); // Reset to first page\n  };\n\n  const handleGlobalTypeChange = (value) => {\n    setFilterType(value);\n    setPagination(prev => ({ ...prev, current: 1 })); // Reset to first page\n  };\n\n  const handleGlobalImplementationStatusChange = (value) => {\n    setFilterImplementationStatus(value);\n    setPagination(prev => ({ ...prev, current: 1 })); // Reset to first page\n  };\n\n  // 点击查看详情\n  const handleViewDetail = (id) => {\n    navigate(`/suggestions/${id}`);\n  };\n\n  // 打开更新实施状态模态框\n  const showUpdateModal = (suggestion) => {\n    setCurrentSuggestion(suggestion);\n    setUpdateModalVisible(true);\n    \n    // 确定当前状态\n    let currentStatus = '未开始';\n    \n    if (suggestion.implementation && suggestion.implementation.status) {\n      // 优先使用implementation中的status\n      currentStatus = getStatusDisplayText(suggestion.implementation.status, 'implementation');\n    } else if (suggestion.implementationStatus) {\n      // 其次使用顶层的implementationStatus\n      currentStatus = getStatusDisplayText(suggestion.implementationStatus, 'implementation');\n    }\n    \n    console.log('当前状态:', currentStatus);\n    \n    // 更新当前状态值\n    setCurrentStatusValue(currentStatus);\n    \n    // 预填表单\n    form.setFieldsValue({\n      status: currentStatus, // 使用从 getStatusDisplayText 获取的中文状态\n      responsiblePerson: suggestion.implementation?.responsiblePerson || '',\n      startDate: suggestion.implementation?.startDate ? moment(suggestion.implementation.startDate) : null,\n      plannedEndDate: suggestion.implementation?.plannedEndDate ? moment(suggestion.implementation.plannedEndDate) : null,\n      actualEndDate: suggestion.implementation?.actualEndDate ? moment(suggestion.implementation.actualEndDate) : null,\n      notes: suggestion.implementation?.notes || '',\n    });\n  };\n\n  // 处理状态变更\n  const handleStatusChange = (value) => {\n    console.log('状态变更为:', value);\n    setCurrentStatusValue(value);\n    form.setFieldsValue({ status: value });\n  };\n\n  // 关闭更新实施状态模态框\n  const handleUpdateCancel = () => {\n    setUpdateModalVisible(false);\n    setCurrentSuggestion(null);\n    form.resetFields();\n  };\n\n  // 提交实施状态更新\n  const handleUpdateSubmit = async () => {\n    try {\n      // 验证表单\n      const values = await form.validateFields();\n      setConfirmLoading(true);\n\n      // 将中文状态转换回英文键\n      const statusKey = Object.keys(IMPLEMENTATION_STATUS).find(\n        key => IMPLEMENTATION_STATUS[key] === values.status\n      );\n\n      if (!statusKey) {\n        message.error('无效的状态选择，无法找到对应的状态代码');\n        setConfirmLoading(false);\n        return;\n      }\n\n      const updateData = {\n        status: statusKey, // 使用转换后的英文键\n        responsiblePerson: values.responsiblePerson,\n        startDate: values.startDate?.format('YYYY-MM-DD'),\n        plannedCompletionDate: values.plannedEndDate?.format('YYYY-MM-DD'), // 注意字段名对应后端\n        actualCompletionDate: values.actualEndDate?.format('YYYY-MM-DD'), // 注意字段名对应后端\n        notes: values.notes\n        // 移除 evaluation 相关字段\n      };\n\n      console.log('准备更新实施状态:', currentSuggestion._id, updateData);\n\n      // 调用 service 更新状态\n      const result = await suggestionService.updateImplementation(currentSuggestion._id, updateData);\n\n      console.log('更新实施状态 API 响应:', result);\n\n      if (result && result.success) { // 检查 success 标志\n        message.success('实施状态更新成功');\n        setUpdateModalVisible(false);\n        // 重新加载数据\n        fetchImplementationSuggestions();\n      } else {\n        message.error(result?.message || '操作失败'); // 显示后端返回的错误信息\n      }\n    } catch (error) {\n      console.error('更新实施状态失败:', error);\n      // 检查是否是表单验证错误\n      if (error.errorFields) {\n        message.error('表单填写有误，请检查');\n      } else {\n         message.error('更新实施状态时发生错误');\n      }\n    } finally {\n      setConfirmLoading(false);\n    }\n  };\n\n  // 打开详情查看模态框\n  const showDetailModal = (suggestion) => {\n    setCurrentSuggestion(suggestion);\n    setDetailVisible(true);\n  };\n\n  // 关闭详情查看模态框\n  const handleDetailCancel = () => {\n    setDetailVisible(false);\n  };\n\n  // 表格列定义\n  const desktopColumns = [\n    {\n      title: '标题',\n      dataIndex: 'title',\n      key: 'title',\n      sorter: true,\n      render: (text, record) => (\n        <Button \n          type=\"link\" \n          onClick={() => showDetailModal(record)}\n          style={{\n            fontSize: '14px',\n            padding: '0',\n            textAlign: 'left',\n            height: 'auto',\n            lineHeight: 'normal'\n          }}\n        >\n          <span style={{ whiteSpace: 'normal', wordBreak: 'break-word' }}>\n            {text}\n          </span>\n        </Button>\n      )\n    },\n    {\n      title: '类型',\n      dataIndex: 'type',\n      key: 'type',\n      sorter: true,\n      render: (type) => {\n        // 优先使用常量中的中文，其次是原始值\n        const typeText = SUGGESTION_TYPES[type] || type;\n        return (\n          <Tag \n            color={TYPE_COLORS[type] || 'default'}\n            style={{ \n              padding: '4px 8px', \n              borderRadius: '4px', \n              fontSize: '14px'\n            }}\n          >\n            {typeText}\n          </Tag>\n        );\n      }\n    },\n    {\n      title: '审核状态',\n      dataIndex: 'reviewStatus',\n      key: 'reviewStatus',\n      sorter: true,\n      render: (status) => {\n        // 在实施列表，审核状态理论上都应是 '已批准'\n        // 使用工具函数获取文本和颜色\n        const statusText = getStatusDisplayText(status, 'review');\n        const statusColor = getStatusColor(status, 'review'); // 确保 getStatusColor 支持 review 类型\n        return (\n          <Tag \n            color={statusColor || 'green'}\n            style={{ \n              padding: '4px 8px', \n              borderRadius: '4px', \n              fontSize: '14px'\n            }}\n          >\n            {statusText || '已批准'}\n          </Tag>\n        );\n      }\n    },\n    {\n      title: '实施状态',\n      dataIndex: 'implementationStatus',\n      key: 'implementationStatus',\n      sorter: true,\n      render: (status, record) => {\n        // 优先使用 implementation 对象中的状态，其次才是顶层的 implementationStatus\n        const implStatus = record.implementation?.status || status || 'NOT_STARTED';\n        const statusText = getStatusDisplayText(implStatus, 'implementation');\n        const statusColor = getStatusColor(implStatus, 'implementation');\n        \n        return (\n          <Tag \n            color={statusColor || 'default'}\n            style={{ \n              padding: '4px 8px', \n              borderRadius: '4px', \n              fontSize: '14px'\n            }}\n          >\n            {statusText || '未开始'}\n          </Tag>\n        );\n      }\n    },\n    {\n      title: '班组',\n      dataIndex: 'team',\n      key: 'team',\n      sorter: true,\n      render: (team) => <span style={{ fontSize: '14px' }}>{team}</span>\n    },\n    {\n      title: '责任人',\n      dataIndex: ['implementation', 'responsiblePerson'],\n      key: 'responsiblePerson',\n      render: (person) => <span style={{ fontSize: '14px' }}>{person || '未分配'}</span>\n    },\n    {\n      title: '计划完成日期',\n      dataIndex: ['implementation', 'plannedEndDate'],\n      key: 'plannedEndDate',\n      render: (date) => (\n        <span style={{ fontSize: '14px' }}>\n          {date ? moment(date).format('YYYY-MM-DD') : '未设置'}\n        </span>\n      )\n    },\n    {\n      title: '操作',\n      key: 'action',\n      render: (_, record) => (\n        <Space>\n          <Button \n            type=\"primary\" \n            onClick={() => showUpdateModal(record)}\n            style={{ fontSize: '14px' }}\n          >\n            更新状态\n          </Button>\n          <Button \n            onClick={() => showDetailModal(record)}\n            icon={<FileTextOutlined />}\n            style={{ fontSize: '14px' }}\n          >\n            详情\n          </Button>\n        </Space>\n      )\n    }\n  ];\n\n  // 添加移动端适配的列定义\n  const mobileColumns = [\n    {\n      title: '建议实施信息',\n      dataIndex: 'title',\n      key: 'title',\n      render: (text, record) => {\n        // 获取实施状态\n        const implStatus = record.implementation?.status || record.implementationStatus || 'NOT_STARTED';\n        const statusText = getStatusDisplayText(implStatus, 'implementation');\n        const statusColor = getStatusColor(implStatus, 'implementation');\n        \n        return (\n          <div style={{ padding: '8px 0' }}>\n            <div style={{ fontSize: '15px', fontWeight: 'bold', marginBottom: '8px' }}>\n              {text}\n            </div>\n            \n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '6px', marginBottom: '8px' }}>\n              <Tag \n                color={TYPE_COLORS[record.type] || 'default'}\n                style={{ padding: '2px 6px', fontSize: '12px' }}\n              >\n                {SUGGESTION_TYPES[record.type] || record.type}\n              </Tag>\n              \n              <Tag \n                color={statusColor}\n                style={{ padding: '2px 6px', fontSize: '12px' }}\n              >\n                {statusText}\n              </Tag>\n            </div>\n            \n            <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '12px', color: '#888', marginBottom: '8px' }}>\n              <span>班组: {record.team || '未知'}</span>\n              <span>责任人: {record.implementation?.responsiblePerson || '未分配'}</span>\n            </div>\n            \n            <div style={{ fontSize: '12px', color: '#888', marginBottom: '10px' }}>\n              <span>计划完成: {record.implementation?.plannedEndDate ? moment(record.implementation.plannedEndDate).format('YYYY-MM-DD') : '未设置'}</span>\n            </div>\n            \n            <div style={{ display: 'flex', gap: '8px', marginTop: '10px' }}>\n              <Button \n                type=\"primary\" \n                size=\"small\"\n                onClick={() => showUpdateModal(record)}\n              >\n                更新状态\n              </Button>\n              \n              <Button \n                size=\"small\"\n                onClick={() => showDetailModal(record)}\n              >\n                查看详情\n              </Button>\n            </div>\n          </div>\n        );\n      }\n    }\n  ];\n\n  const renderImplementationDetail = () => {\n    if (!currentSuggestion || !currentSuggestion.implementation) {\n      return <Alert message=\"暂无实施信息\" type=\"info\" showIcon />;\n    }\n    \n    const implementation = currentSuggestion.implementation;\n    const history = implementation.statusHistory || implementation.history || [];\n    \n    console.log('实施历史记录:', history);\n    \n    return (\n      <div>\n        <Card title=\"实施基本信息\" style={{ marginBottom: 16 }}>\n          <div style={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap' }}>\n            <div style={{ marginBottom: 16, minWidth: '45%' }}>\n              <Text strong>实施状态: </Text>\n              <Tag \n                color={getStatusColor(implementation.status || '未开始')}\n                style={{ \n                  padding: '4px 8px', \n                  borderRadius: '4px', \n                  fontSize: '14px'\n                }}\n              >\n                {getStatusDisplayText(implementation.status || '未开始', 'implementation')}\n              </Tag>\n            </div>\n            \n            <div style={{ marginBottom: 16, minWidth: '45%' }}>\n              <Text strong>责任人: </Text>\n              <Text>{implementation.responsiblePerson || '未分配'}</Text>\n            </div>\n            \n            <div style={{ marginBottom: 16, minWidth: '45%' }}>\n              <Text strong>开始日期: </Text>\n              <Text>{implementation.startDate ? moment(implementation.startDate).format('YYYY-MM-DD') : '未设置'}</Text>\n            </div>\n            \n            <div style={{ marginBottom: 16, minWidth: '45%' }}>\n              <Text strong>计划完成日期: </Text>\n              <Text>{implementation.plannedEndDate ? moment(implementation.plannedEndDate).format('YYYY-MM-DD') : '未设置'}</Text>\n            </div>\n            \n            {implementation.actualEndDate && (\n              <div style={{ marginBottom: 16, minWidth: '45%' }}>\n                <Text strong>实际完成日期: </Text>\n                <Text>{moment(implementation.actualEndDate).format('YYYY-MM-DD')}</Text>\n              </div>\n            )}\n          </div>\n          \n          {implementation.notes && (\n            <div style={{ marginTop: 16 }}>\n              <Text strong>实施备注: </Text>\n              <Paragraph>{implementation.notes}</Paragraph>\n            </div>\n          )}\n        </Card>\n        \n        {implementation.attachments && implementation.attachments.length > 0 && (\n          <Card title=\"实施附件\" style={{ marginBottom: 16 }}>\n            <ul style={{ paddingLeft: 20 }}>\n              {implementation.attachments.map((attachment, index) => (\n                <li key={index}>\n                  <a href={attachment.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {attachment.name}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </Card>\n        )}\n        \n        {history && history.length > 0 ? (\n          <Card title=\"实施历史记录\" style={{ marginBottom: 16 }}>\n            <Timeline reverse={true}>\n              {[...history].reverse().map((record, index) => (\n                <Timeline.Item \n                  key={index} \n                  color={getStatusColor(record.status)}\n                  dot={\n                    <div style={{ \n                      background: getStatusColor(record.status), \n                      borderRadius: '50%', \n                      width: '16px', \n                      height: '16px', \n                      display: 'flex', \n                      alignItems: 'center', \n                      justifyContent: 'center' \n                    }}>\n                      {index === 0 && <ClockCircleOutlined style={{ fontSize: '10px', color: '#fff' }} />}\n                    </div>\n                  }\n                >\n                  <div style={{ \n                    border: '1px solid #f0f0f0', \n                    borderRadius: '4px', \n                    padding: '12px', \n                    marginBottom: '8px',\n                    backgroundColor: '#fafafa'\n                  }}>\n                    <div style={{ borderBottom: '1px solid #f0f0f0', paddingBottom: '8px', marginBottom: '8px' }}>\n                      <Tag \n                        color={getStatusColor(record.status)}\n                        style={{ \n                          padding: '4px 8px', \n                          borderRadius: '4px', \n                          fontSize: '14px'\n                        }}\n                      >\n                        {getStatusDisplayText(record.status, 'implementation')}\n                      </Tag>\n                      <Text type=\"secondary\" style={{ marginLeft: '8px' }}>\n                        {moment(record.date || record.timestamp).format('YYYY-MM-DD HH:mm:ss')}\n                      </Text>\n                    </div>\n                    \n                    <p><Text strong>操作人员: </Text>{record.updatedBy?.name || record.updatedBy || '系统'}</p>\n                    {(record.notes || record.comments) && (\n                      <div style={{ marginTop: '4px' }}>\n                        <Text strong>备注信息: </Text>\n                        <div style={{ \n                          backgroundColor: '#fff', \n                          padding: '8px', \n                          borderRadius: '4px',\n                          border: '1px solid #f0f0f0',\n                          marginTop: '4px'\n                        }}>\n                          {record.notes || record.comments}\n                        </div>\n                      </div>\n                    )}\n                    \n                    {index < history.length - 1 && index !== 0 && (\n                      <div style={{ marginTop: '8px' }}>\n                        <Text type=\"secondary\">\n                          状态持续时间: {\n                            moment(record.date || record.timestamp).diff(moment([...history].reverse()[index-1].date || [...history].reverse()[index-1].timestamp), 'hours') >= 24 ?\n                            `${moment(record.date || record.timestamp).diff(moment([...history].reverse()[index-1].date || [...history].reverse()[index-1].timestamp), 'days')} 天` :\n                            `${moment(record.date || record.timestamp).diff(moment([...history].reverse()[index-1].date || [...history].reverse()[index-1].timestamp), 'hours')} 小时`\n                          }\n                        </Text>\n                      </div>\n                    )}\n                  </div>\n                </Timeline.Item>\n              ))}\n            </Timeline>\n          </Card>\n        ) : (\n          <Card title=\"实施历史记录\" style={{ marginBottom: 16 }}>\n            <Empty description=\"暂无状态变更记录\" />\n          </Card>\n        )}\n      </div>\n    );\n  };\n\n  // 获取可用的状态选项\n  const getStatusOptions = (currentStatus) => {\n    // 直接返回所有有效的实施状态\n    return Object.entries(IMPLEMENTATION_STATUS)\n           // 过滤掉 EVALUATED (虽然常量已移除，双重保险)\n           .filter(([key, value]) => key !== 'EVALUATED') \n           .map(([key, value]) => ({ \n             value: value, // 使用中文值作为选项值和显示文本\n             label: value \n           }));\n  };\n\n  // 在组件函数内的状态声明区域添加移动设备检测状态\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n\n  // 在 useEffect 区域添加窗口大小监听代码\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n    \n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <div className=\"responsive-container\" style={{ padding: isMobile ? '12px' : '24px' }}>\n      {/* Global Filter UI */}\n      <Card style={{ marginBottom: isMobile ? '12px' : '20px' }} bodyStyle={{ padding: isMobile ? '12px' : '24px' }}>\n        <Form layout={isMobile ? \"vertical\" : \"inline\"}>\n          <Row gutter={isMobile ? 8 : 16} style={{ width: '100%' }}>\n            <Col xs={24} sm={12} md={8} lg={6}>\n              <Form.Item style={{width: '100%', marginBottom: isMobile ? '12px' : '20px'}} label=\"搜索\">\n                <Input.Search\n                  placeholder=\"搜索建议标题...\"\n                  allowClear\n                  onSearch={handleGlobalSearch}\n                  onChange={(e) => {\n                    if (!e.target.value) handleGlobalSearch('');\n                  }}\n                  enterButton\n                />\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={12} md={8} lg={6}>\n              <Form.Item style={{width: '100%', marginBottom: isMobile ? '12px' : '20px'}} label=\"类型\">\n                <Select\n                  value={filterType}\n                  onChange={handleGlobalTypeChange}\n                  style={{ width: '100%' }}\n                  placeholder=\"所有类型\"\n                >\n                  <Option value=\"ALL\">所有类型</Option>\n                  {Object.entries(SUGGESTION_TYPES).map(([key, value]) => (\n                    <Option key={key} value={key}>{value}</Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={12} md={8} lg={6}>\n              <Form.Item style={{width: '100%', marginBottom: isMobile ? '12px' : '20px'}} label=\"实施状态\">\n                <Select\n                  value={filterImplementationStatus}\n                  onChange={handleGlobalImplementationStatusChange}\n                  style={{ width: '100%' }}\n                  placeholder=\"所有实施状态\"\n                >\n                  <Option value=\"ALL\">所有实施状态</Option>\n                  {Object.entries(IMPLEMENTATION_STATUS).map(([key, value]) => (\n                    <Option key={key} value={key}>{value}</Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Card>\n\n      <Card bodyStyle={{ padding: isMobile ? '12px' : '24px' }}>\n        <Title level={isMobile ? 4 : 3} style={{ fontSize: isMobile ? '18px' : '20px', marginBottom: isMobile ? '16px' : '20px' }}>建议实施跟踪</Title>\n        \n        <Table\n          columns={isMobile ? mobileColumns : desktopColumns}\n          dataSource={implementationSuggestions}\n          rowKey=\"_id\"\n          loading={loading}\n          onChange={handleTableChange}\n          pagination={{\n            current: pagination.current,\n            pageSize: pagination.pageSize,\n            total: pagination.total,\n            size: isMobile ? \"small\" : \"default\",\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total) => `共 ${total} 条建议`\n          }}\n          scroll={isMobile ? {} : {}}\n        />\n      </Card>\n\n      {/* 更新实施状态模态框 */}\n      <Modal\n        title=\"更新实施状态\"\n        visible={updateModalVisible}\n        onCancel={handleUpdateCancel}\n        footer={null}\n        width={isMobile ? '95%' : 600}\n        bodyStyle={{ padding: isMobile ? '16px' : '24px' }}\n      >\n        <Form\n          form={form}\n          onFinish={handleUpdateSubmit}\n          layout=\"vertical\"\n        >\n          <Row gutter={isMobile ? 8 : 16}>\n            <Col xs={24} sm={12}>\n              <Form.Item\n                name=\"status\"\n                label=\"实施状态\"\n                rules={[{ required: true, message: '请选择实施状态' }]}\n              >\n                <Select\n                  placeholder=\"请选择实施状态\"\n                  onChange={handleStatusChange}\n                  options={getStatusOptions(currentStatusValue)}\n                />\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={12}>\n              <Form.Item\n                name=\"responsiblePerson\"\n                label=\"责任人\"\n                rules={[\n                  { required: true, message: '请输入责任人' },\n                  { max: 50, message: '责任人不能超过50个字符' },\n                ]}\n              >\n                <Input placeholder=\"请输入责任人\" />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row gutter={isMobile ? 8 : 16}>\n            <Col xs={24} sm={8}>\n              <Form.Item\n                name=\"startDate\"\n                label=\"开始日期\"\n                rules={[{ required: true, message: '请选择开始日期' }]}\n              >\n                <DatePicker \n                  style={{ width: '100%' }} \n                  placeholder=\"选择日期\"\n                  format=\"YYYY-MM-DD\"\n                />\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={8}>\n              <Form.Item\n                name=\"plannedEndDate\"\n                label=\"计划完成日期\"\n                rules={[{ required: true, message: '请选择计划完成日期' }]}\n              >\n                <DatePicker \n                  style={{ width: '100%' }} \n                  placeholder=\"选择日期\"\n                  format=\"YYYY-MM-DD\"\n                />\n              </Form.Item>\n            </Col>\n            <Col xs={24} sm={8}>\n              <Form.Item\n                name=\"actualEndDate\"\n                label=\"实际完成日期\"\n              >\n                <DatePicker \n                  style={{ width: '100%' }} \n                  placeholder=\"选择日期\"\n                  format=\"YYYY-MM-DD\"\n                  disabled={!['COMPLETED', '已完成'].includes(currentStatusValue)}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Form.Item\n            name=\"notes\"\n            label=\"实施备注\"\n          >\n            <Input.TextArea rows={isMobile ? 3 : 4} placeholder=\"请输入实施过程中的详细说明\" />\n          </Form.Item>\n\n          <Row gutter={16}>\n            <Col span={isMobile ? 12 : 8}>\n              <Button type=\"primary\" htmlType=\"submit\" loading={confirmLoading} style={{ width: '100%' }}>\n                提交\n              </Button>\n            </Col>\n            <Col span={isMobile ? 12 : 8}>\n              <Button onClick={handleUpdateCancel} style={{ width: '100%' }}>\n                取消\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Modal>\n\n      {/* 建议实施详情模态框 */}\n      <Modal\n        title={currentSuggestion ? `建议实施跟踪: ${currentSuggestion.title}` : '建议详情'}\n        visible={detailVisible}\n        onCancel={handleDetailCancel}\n        footer={[\n          <Button key=\"back\" onClick={handleDetailCancel} style={{ fontSize: '14px' }}>\n            关闭\n          </Button>,\n        ]}\n        width={isMobile ? '95%' : 800}\n        bodyStyle={{ fontSize: '14px', padding: isMobile ? '16px' : '24px' }}\n      >\n        {currentSuggestion && (\n          <div>\n            <Card title=\"建议基本信息\" style={{ marginBottom: 16 }} bodyStyle={{ padding: isMobile ? '12px' : '24px' }}>\n              <div style={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap' }}>\n                <div style={{ marginBottom: 16, minWidth: isMobile ? '100%' : '45%' }}>\n                  <Text strong>建议类型: </Text>\n                  <Tag \n                    color={TYPE_COLORS[currentSuggestion.type] || 'default'}\n                    style={{ \n                      marginLeft: '8px',\n                      padding: '4px 8px', \n                      borderRadius: '4px', \n                      fontSize: '14px'\n                    }}\n                  >\n                    {SUGGESTION_TYPES[currentSuggestion.type] || currentSuggestion.type}\n                  </Tag>\n                </div>\n                \n                <div style={{ marginBottom: 16, minWidth: isMobile ? '100%' : '45%' }}>\n                  <Text strong>提交人: </Text>\n                  <Text>{currentSuggestion.submitter?.name || '未知'}</Text>\n                </div>\n                \n                <div style={{ marginBottom: 16, minWidth: isMobile ? '100%' : '45%' }}>\n                  <Text strong>班组: </Text>\n                  <Text>{currentSuggestion.team || '未知'}</Text>\n                </div>\n                \n                <div style={{ marginBottom: 16, minWidth: isMobile ? '100%' : '45%' }}>\n                  <Text strong>提交时间: </Text>\n                  <Text>{currentSuggestion.createdAt ? moment(currentSuggestion.createdAt).format('YYYY-MM-DD HH:mm') : '未知'}</Text>\n                </div>\n              </div>\n              \n              <div style={{ marginTop: 16 }}>\n                <Text strong>建议内容: </Text>\n                <Paragraph>{currentSuggestion.content}</Paragraph>\n              </div>\n            </Card>\n            \n            {/* 实施详情 */}\n            {renderImplementationDetail()}\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default ImplementationList; "],"names":["Title","Text","Paragraph","Typography","TextArea","Input","Option","Select","Panel","Collapse","Dragger","Upload","ImplementationList","_currentSuggestion$su","navigate","useNavigate","form","Form","useForm","implementationSuggestions","setImplementationSuggestions","useState","loading","setLoading","currentUser","setCurrentUser","updateModalVisible","setUpdateModalVisible","currentSuggestion","setCurrentSuggestion","confirmLoading","setConfirmLoading","detailVisible","setDetailVisible","currentStatusValue","setCurrentStatusValue","pagination","setPagination","current","pageSize","total","sorter","setSorter","field","order","searchTerm","setSearchTerm","filterType","setFilterType","filterImplementationStatus","setFilterImplementationStatus","useEffect","async","user","authService","getCurrentUser","message","error","console","fetchCurrentUser","fetchImplementationSuggestions","params","page","sortBy","sortOrder","reviewStatus","includeImplementation","forceRefresh","title","type","implementationStatus","Object","keys","forEach","key","log","response","suggestionService","getSuggestions","data","prev","warn","handleGlobalSearch","value","showUpdateModal","suggestion","_suggestion$implement","_suggestion$implement2","_suggestion$implement3","_suggestion$implement4","_suggestion$implement5","currentStatus","implementation","status","getStatusDisplayText","setFieldsValue","responsiblePerson","startDate","moment","plannedEndDate","actualEndDate","notes","handleUpdateCancel","resetFields","showDetailModal","handleDetailCancel","desktopColumns","dataIndex","render","text","record","_jsx","Button","onClick","style","fontSize","padding","textAlign","height","lineHeight","children","whiteSpace","wordBreak","typeText","SUGGESTION_TYPES","Tag","color","TYPE_COLORS","borderRadius","statusText","statusColor","getStatusColor","_record$implementatio","implStatus","team","person","date","format","_","_jsxs","Space","icon","FileTextOutlined","mobileColumns","_record$implementatio2","_record$implementatio3","_record$implementatio4","fontWeight","marginBottom","display","flexWrap","gap","justifyContent","marginTop","size","isMobile","setIsMobile","window","innerWidth","handleResize","addEventListener","removeEventListener","className","Card","bodyStyle","layout","Row","gutter","width","Col","xs","sm","md","lg","Item","label","Search","placeholder","allowClear","onSearch","onChange","e","target","enterButton","entries","map","_ref3","IMPLEMENTATION_STATUS","_ref4","level","Table","columns","dataSource","rowKey","handleTableChange","newPagination","tableColumnFilters","sorterParam","showSizeChanger","showQuickJumper","showTotal","scroll","Modal","visible","onCancel","footer","onFinish","_values$startDate","_values$plannedEndDat","_values$actualEndDate","values","validateFields","statusKey","find","updateData","plannedCompletionDate","actualCompletionDate","_id","result","updateImplementation","success","errorFields","name","rules","required","options","filter","_ref","_ref2","max","DatePicker","disabled","includes","rows","span","htmlType","minWidth","strong","marginLeft","submitter","createdAt","content","renderImplementationDetail","Alert","showIcon","history","statusHistory","attachments","length","paddingLeft","attachment","index","href","url","rel","Timeline","reverse","_record$updatedBy","dot","background","alignItems","ClockCircleOutlined","border","backgroundColor","borderBottom","paddingBottom","timestamp","updatedBy","comments","diff","Empty","description"],"sourceRoot":""}